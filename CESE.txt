NOSEESE=https://raw.githubusercontent.com/XaHuizon/NMMR/refs/heads/main/隐藏SELinux为宽容模式.zip
NOBLACK=https://raw.githubusercontent.com/XaHuizon/NMMR/refs/heads/main/自动救砖模块.zip
ALL=NULL.log
LOG=刷入失败原因.log
LOG_A=刷入失败原因_A.log
NULL=
echo "\033[0;33;1m[-]本次执行将会为Magisk刷入隐藏SELinux宽容模式模块\033[0m"
echo "\033[0;35;1m[来源告知]该模块来自爱玩机工具箱 作者:ikun\033[0m"
echo "\033[0;31;1m[!]模块已经过复审并且实际有效 可以有效隐藏SELinux为宽容模式 适用于全防脚本玩家 [详情前往爱玩机查看] 该模块对机型支持度为未知 在刷入之前确保已刷入自动救砖 否则变砖后无法救回 如未刷入自动救砖可在下方菜单中选择刷入自动救砖\033[0m"
    echo "\033[0;33;1m->是否刷入 >>\033[0m"
    echo "\033[0;36;1m›1·-刷入隐藏SELinux宽容模式模块\033[0m"
    echo "\033[0;36;1m›2·-刷入自动救砖模块[作者:奋斗的小青年]\033[0m"
    echo "\033[0;36;1m›3·-退出执行\033[0m"
    echo -ne "\033[0;36;1m[>]*ᐷ\033[0m"
    read B
    if [ "$B" = "1" ]
    then
        echo "\033[0;33;1m[-]即将开始刷入隐藏SELinux宽容模式模块 >>\033[0m"
        echo "\033[0;33;1m->正在从云端下载模块-[大小:7.48KB]...\033[0m"
        curl -O -s "$NOSEESE"
        MKNAME_ZIP=隐藏SELinux为宽容模式.zip
    elif [ "$B" = "2" ]
    then
        echo "\033[0;33;1m[-]即将开始刷入自动救砖模块 >>\033[0m"
        echo "\033[0;33;1m->正在从云端下载模块-[大小:5.49KB]...\033[0m"
        curl -O -s "$NOBLACK"
        MKNAME_ZIP=自动救砖模块.zip
    else
        echo "\033[0;33;1m[-]正在退出...\033[0m"
        exit 0
    fi
WHTBIG=14
FILEBIG=$(stat -c%s "$MKNAME_ZIP")
if [ "$FILEBIG" != "$WHTBIG" ]
then
    echo "\033[0;32;1m - 下载完成\033[0m"
    echo "\033[0;33;1m[-]是否立即刷入 >>\033[0m"
else
    echo "\033[0;31;1m[!]下载失败 \033[0;33;1m网络异常或资源已从服务器中移除 检查网络连接是否为科学上网或检查服务器中资源是否正常\033[0m"
    rm $MKNAME_ZIP
    exit 0
fi
ZIPNAME="./$MKNAME_ZIP"
echo -ne "\033[0;36;1m[1›刷入/2›取消]*ᐷ\033[0;1m"
read MK
if [ "$MK" = "1" ]
then
    echo "\033[0;33;1m[-]开始刷入[由模块提供刷入界面] >>\033[0m"
else
    echo "\033[0;33;1m[-]已取消刷入 正在退出...\033[0m"
    exit 0
fi
echo -ne "\033[0;35;1m"
magisk --install-module "$ZIPNAME" 2>> $LOG
echo -ne "\033[0m"
if [ -e "$LOG" ]
then
    echo "\033[0;31;1m - 刷入失败\033[0m"
    echo "\033[0;33;1m[提示]检查是否已ROOT或已安装Magisk\033[0m"
    rm $LOG
    exit 0
else
    echo "\033[0;32;1m - 刷入成功\033[0m"
fi
echo "\033[0;33;1m->是否立即重启 >>\033[0m"
echo -ne "\033[0;36;1m[1›重启/2›打开Magisk查看/3›退出]*ᐷ\033[0;1m"
read MAGISK
if [ "$MAGISK" = "1" ]
then
    for S in $(seq 3 -1 1)
    do
        echo -ne "\033[0;33;1m->$S秒后重启...\033[0m\r"
        sleep 1
    done
    reboot
elif [ "$MAGISK" = "2" ]
then
    for S_ in $(seq 2 -0.5 0.5)
    do
        echo -ne "\033[0;33;1m->$S_秒后打开Magisk >>\033[0m\r"
        sleep 0.5
    done
    ECHOD=$(am start io.github.huskydg.magisk/com.topjohnwu.magisk.ui.MainActivity)
    ECHOP=$(am start com.topjohnwu.magisk/com.topjohnwu.magisk.ui.MainActivity)
    exit 0
else
    echo "\033[0;33;1m[-]正在退出...\033[0m"
    exit 0
fi
